<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">

    <!-- Enable features -->
    <featureManager>
        <feature>jakartaee-10.0</feature>
        <feature>microProfile-6.0</feature>
        <feature>restfulWS-3.1</feature>
        <feature>jsonb-3.0</feature>
    </featureManager>

    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->

    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
        encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
        Then uncomment the keyStore element. -->
    <!--
    <keyStore password=""/> 
    -->

    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password,
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element.
        Then uncomment the user element. -->
    <basicRegistry id="basic" realm="BasicRealm">
        <!--
        <user name="yourUserName" password="" />
        -->
    </basicRegistry>

    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint id="defaultHttpEndpoint"
                  httpPort="9080"
                  httpsPort="9443" />
    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>

    <!-- Configures the application on a specified context root -->
    <webApplication contextRoot="/" location="vacation-planner-pro.war" />

    <!-- Default SSL configuration enables trust for default certificates from the Java runtime -->
    <ssl id="defaultSSLConfig" trustDefaultCerts="true" />


    <!-- ==================== PostgreSQL Databases Configuration Start ==================== -->
    <!-- DataSource Configuration for auth_database -->
    <dataSource id="AuthDataSource" jndiName="jdbc/authDatabase">
        <jdbcDriver libraryRef="postgresql-library"/>
        <properties.postgresql serverName="localhost"
                               portNumber="5432"
                               databaseName="${env.DB1_NAME}"
                               user="${env.DB_USERNAME}"
                               password="${env.DB_PASSWORD}"/>
    </dataSource>

    <!-- DataSource Configuration for vacation_management -->
    <dataSource id="VacationDataSource" jndiName="jdbc/vacationDatabase">
        <jdbcDriver libraryRef="postgresql-library"/>
        <properties.postgresql serverName="localhost"
                               portNumber="5433"
                               databaseName="${env.DB2_NAME}"
                               user="${env.DB_USERNAME}"
                               password="${env.DB_PASSWORD}"/>
    </dataSource>

    <!-- DataSource Configuration for audit_and_security_database -->
    <dataSource id="AuditDataSource" jndiName="jdbc/auditDatabase">
        <jdbcDriver libraryRef="postgresql-library"/>
        <properties.postgresql serverName="localhost"
                               portNumber="5434"
                               databaseName="${env.DB3_NAME}"
                               user="${env.DB_USERNAME}"
                               password="${env.DB_PASSWORD}"/>
    </dataSource>

    <!-- PostgreSQL JDBC Driver Library -->
    <library id="postgresql-library">
        <file name="${server.config.dir}/postgresql-42.7.2.jar"/>
    </library>
    <!-- ==================== PostgreSQL Databases Configuration End ==================== -->

    <cors
      domain="/api/"
      allowedOrigins="http://localhost:5173"
      allowedMethods="GET,POST,PUT,DELETE,OPTIONS,HEAD"
      allowedHeaders="origin,content-type,accept,authorization"
      exposeHeaders=""
      allowCredentials="true"
      maxAge="3600" />

      <cors
      domain="/api/"
      allowedOrigins="http://148.100.108.158:5173"
      allowedMethods="GET,POST,PUT,DELETE,OPTIONS,HEAD"
      allowedHeaders="origin,content-type,accept,authorization"
      exposeHeaders=""
      allowCredentials="true"
      maxAge="3600" />

</server>
